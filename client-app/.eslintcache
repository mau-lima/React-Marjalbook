[{"E:\\Projects\\Reactivities - dotnet and react\\Actual project\\Reactivities\\client-app\\src\\index.tsx":"1","E:\\Projects\\Reactivities - dotnet and react\\Actual project\\Reactivities\\client-app\\src\\reportWebVitals.ts":"2","E:\\Projects\\Reactivities - dotnet and react\\Actual project\\Reactivities\\client-app\\src\\app\\layout\\App.tsx":"3","E:\\Projects\\Reactivities - dotnet and react\\Actual project\\Reactivities\\client-app\\src\\features\\nav\\navbar.tsx":"4","E:\\Projects\\Reactivities - dotnet and react\\Actual project\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx":"5","E:\\Projects\\Reactivities - dotnet and react\\Actual project\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx":"6","E:\\Projects\\Reactivities - dotnet and react\\Actual project\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx":"7","E:\\Projects\\Reactivities - dotnet and react\\Actual project\\Reactivities\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx":"8"},{"size":566,"mtime":1611010421767,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":2178,"mtime":1611522652135,"results":"12","hashOfConfig":"10"},{"size":736,"mtime":1611417092592,"results":"13","hashOfConfig":"10"},{"size":1580,"mtime":1611521718974,"results":"14","hashOfConfig":"10"},{"size":1447,"mtime":1611410531017,"results":"15","hashOfConfig":"10"},{"size":1168,"mtime":1611421651271,"results":"16","hashOfConfig":"10"},{"size":2871,"mtime":1611522050882,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"15ysuun",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Projects\\Reactivities - dotnet and react\\Actual project\\Reactivities\\client-app\\src\\index.tsx",[],["37","38"],"E:\\Projects\\Reactivities - dotnet and react\\Actual project\\Reactivities\\client-app\\src\\reportWebVitals.ts",[],"E:\\Projects\\Reactivities - dotnet and react\\Actual project\\Reactivities\\client-app\\src\\app\\layout\\App.tsx",[],"E:\\Projects\\Reactivities - dotnet and react\\Actual project\\Reactivities\\client-app\\src\\features\\nav\\navbar.tsx",[],"E:\\Projects\\Reactivities - dotnet and react\\Actual project\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx",["39"],"E:\\Projects\\Reactivities - dotnet and react\\Actual project\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx",["40"],"import React from \"react\";\r\nimport { Item, Image, Button, Label, Segment } from \"semantic-ui-react\";\r\nimport { IActivity } from \"../../../app/modules/activity\";\r\n\r\ninterface IProps {\r\n  activities: IActivity[];\r\n  selectActivity: (id: string) => void;\r\n}\r\n\r\nexport const ActivityList = ({ activities, selectActivity }: IProps) => {\r\n  return (\r\n    //clearing makes it clear previous floats to prevent weird bevaiour. The segment also creates the nice white background\r\n    <Segment clearing>\r\n      <Item.Group divided>\r\n        {activities.map((activity: IActivity) => (\r\n          <Item key={activity.id}>\r\n            <Item.Content>\r\n              <Item.Header as=\"a\">{activity.title}</Item.Header>\r\n              <Item.Meta>{activity.date}</Item.Meta>\r\n              <Item.Description>\r\n                <div>{activity.description}</div>\r\n                <div>{activity.city}</div>\r\n                <div>{activity.venue}</div>\r\n              </Item.Description>\r\n              <Item.Extra>\r\n                <Button\r\n                  floated=\"right\"\r\n                  content=\"View\"\r\n                  color=\"blue\"\r\n                  onClick={() => {\r\n                    selectActivity(activity.id);\r\n                  }}\r\n                />\r\n                <Label basic content={activity.category} />\r\n              </Item.Extra>\r\n            </Item.Content>\r\n          </Item>\r\n        ))}\r\n      </Item.Group>\r\n    </Segment>\r\n  );\r\n};\r\n","E:\\Projects\\Reactivities - dotnet and react\\Actual project\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx",["41"],"import React from \"react\";\r\nimport { Button, Card, Icon, Image } from \"semantic-ui-react\";\r\nimport { IActivity } from \"../../../app/modules/activity\";\r\n\r\ninterface IProps{\r\n  activity:IActivity;\r\n  setEditMode: (editMode:boolean) => void;\r\n  setSelectedActivity: (activity:IActivity | null) => void;\r\n}\r\n\r\nexport const ActivityDetails = ({activity,setEditMode,setSelectedActivity} :IProps) => {\r\n  return (\r\n    //fluid means it takes as much space as it can\r\n    <Card fluid>\r\n      <Image src={`/assets/categoryImages/${activity.category}.jpg`} wrapped ui={false} />\r\n      <Card.Content>\r\n        <Card.Header>{activity.title}</Card.Header>\r\n        <Card.Meta>\r\n          <span className=\"date\">{activity.date}</span>\r\n        </Card.Meta>\r\n        <Card.Description>{activity.description}</Card.Description>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <Button.Group widths={2}>\r\n            <Button basic color ='blue' content= 'Edit' onClick= {() => setEditMode(true)}/>\r\n            <Button basic color ='grey' content= 'Cancel' onClick= {()=> setSelectedActivity(null)}/>\r\n        </Button.Group>\r\n      </Card.Content>\r\n    </Card>\r\n  );\r\n};\r\n","E:\\Projects\\Reactivities - dotnet and react\\Actual project\\Reactivities\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx",["42"],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":2,"column":16,"nodeType":"49","messageId":"50","endLine":2,"endColumn":20},{"ruleId":"47","severity":1,"message":"51","line":2,"column":16,"nodeType":"49","messageId":"50","endLine":2,"endColumn":21},{"ruleId":"47","severity":1,"message":"52","line":2,"column":24,"nodeType":"49","messageId":"50","endLine":2,"endColumn":28},{"ruleId":"47","severity":1,"message":"53","line":3,"column":10,"nodeType":"49","messageId":"50","endLine":3,"endColumn":16},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"@typescript-eslint/no-unused-vars","'List' is defined but never used.","Identifier","unusedVar","'Image' is defined but never used.","'Icon' is defined but never used.","'idText' is defined but never used.","no-global-assign","no-unsafe-negation"]